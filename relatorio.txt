Autores:
António Rodrigo Tavares Martins, 2021236921
Gustavo Samuel de Alves e Bastos de André e Lima, 2020217743

Googol
Neste projeto, o nosso objetivo é criar um motor de busca, com funcionalidades semelhantes às do Google.

As funcionalidades deste motor busca são:	
-Indexação de URLs: O motor é capaz de indexar novos URLs, e também trata de indexar os URLs encontrados dentro desses sites.
-Pesquisa por Termos: Ele permite pesquisar páginas que contenham um conjunto específico de termos, ordenando os resultados por relevância (ou seja, pelo número de páginas que referenciam cada página).
-Consulta de Links: É possível consultar as páginas que têm um link para uma página específica.
-Página de Administração: Além disso, o projeto inclui uma página de administração com informações importantes sobre os diversos componentes do motor, na qual é ativada em tempo real.

Arquitetura de software
Ao todo são 5 programas: Barrel, Downloader, Gateway, Client e Urlqueue.
Barrel
O Barrel atua como um repositório de informações e facilitando a indexação de páginas da web. Este componente opera de forma contínua, recebendo e processando dados provenientes de fontes externas, como o RMI-Gateway e os Downloaders, para garantir a disponibilidade e acessibilidade das informações.

Funcionalidades Principais:
Indexação de URLs: O Barrel recebe URLs provenientes do RMI-Gateway, armazenando e organizando esses links para posterior indexação. Ele mantém um registro das URLs já processadas para evitar duplicações e garantir a eficiência do sistema.

Processamento de Dados: Ao receber informações sobre URLs, o Barrel extrai e armazena dados essenciais, como título, descrição e palavras-chave associadas a cada página da web. Isso é fundamental para a pesquisa de informações posteriormente.

Comunicação com Componentes Externos: O Barrel se comunica com outros componentes do sistema, como os Downloaders, para receber atualizações sobre novas páginas da web a serem indexadas. Além disso, ele interage com o RMI-Gateway para fornecer informações sobre URLs e realizar pesquisas.

Downloader
A função do Downloader é baixar e processar conteúdo de páginas da web em um sistema distribuído. Ele opera continuamente, buscando URLs da Urlqueue, transferindo o conteúdo desses websites e extraindo informações importantes, como título, descrição e palavras-chave.
Para garantir confiabilidade, o downloader lida com diversas situações, como falhas de conexão durante o download, problemas ao obter URLs da fila. Além disso, ele envia via multicast regularmente atualizações e informações sobre os URLs baixados, assegurando que outras partes do sistema estejam informadas sobre o progresso das operações de download.
Durante o download do conteúdo das páginas da web, o downloader utiliza a biblioteca Jsoup para estabelecer conexões e extrair dados essenciais, como título, descrição e palavras encontradas na página. Essas informações são então processadas e encaminhadas para outros elementos do sistema distribuído para análise posterior e indexação.
RMI-Gateway
A classe Gateway desempenha um papel crucial em um sistema distribuído, sendo responsável por facilitar a comunicação com outros componentes do sistema, como os "Barrels", o “RMI-Client” e a “URLQueue”. 
Esta classe possui uma variável de instância chamada searches, um HashMap usado para armazenar as pesquisas e o número de vezes que foram pesquisados, bem como as variáveis avgtime que guarda o tempo médio das pesquisas, e num_searches usada para no cálculo de avgtime, permitindo monitorar e registrar o comportamento de pesquisa no sistema. O método construtor inicializa essa variável como um novo HashMap, pronto para armazenar dados assim que uma instância da classe for criada.
O método addLink recebe um URL como entrada e o envia para um servidor remoto  através de um socket, realizando uma comunicação de rede vital para adicionar novos URLs ao sistema distribuído. O método linkInfo permite ver informações de um site, a partir dum url,e para além disso permite saber qual a lista de outros URLs que fazem ligação para ele.
Já o método search permite realizar pesquisas por um conjunto de palavras-chave, procurando um objeto remoto no registro RMI e chamando um método search. Esta funcionalidade mostras 10 urls de cada vez, bem como o seu título e descrição;
Por fim, o método getAdminPage retorna os barrels ativos, o tempo médio de pesquisa e as 10 pesquisas mais frequentes realizadas no sistema distribuído.
modular e bem organizada é fundamental para garantir a eficiência e escalabilidade do sistema distribuído.

RMI-Client
O RMI-Client permite interação com o sistema distribuído, oferecendo funcionalidades como adição de URLs, realização de pesquisas, consulta de informações sobre links e visualização de estatísticas de pesquisa. Para isso é fornecido um menu, no qual facilita a escolha pelos usuários.
Para mostrar as páginas de administração em tempo real, foi criada uma thread especial, para ser possível regressar ao menu de opções.

URL-Queue
A URL Queue é responsável por armazenar URLs que precisam ser indexados. Funciona como uma fila, onde os URLs são adicionados pelo Gateway e posteriormente distribuídos pelos Downloaders.
Aqui estão os principais aspectos da URL Queue:
Histórico de URLs Indexados: A fila mantém um histórico dos URLs já processados. Isso evita a indexação repetida de URLs idênticos.
Aceitamento de URLs:
Uma Thread recebe os URLs a serem indexados via TCP..
Esses URLs são adicionados à fila.
Se um URL começar com “resend”, ele é adicionado à fila independentemente do histórico. Esse tipo de URL é enviado quando um Downloader falha ao processar um URL anteriormente.
Envio de URLs:
Outra Thread envia os URLs a serem indexados via TCP.
Esses URLs são retirados da fila e encaminhados para os Downloaders, que executam o processo de indexação.

Funcionamento da componente multicast
A componente multicast do sistema é responsável pela comunicação entre os downloaders e storage barrels, e também é usada para informar que a página de admin foi atualizada.
A estrutura principal do protocolo é a mensagem composta por um conjunto não ordenado de pares chave-valor, tal como um hashmap.

As informações enviadas não podes conter os seguintes caracteres: (|) “pipe”, (;) “ponto e vírgula” e (\n) “newline”

Ao enviar informaçoes sobre uma url, é usado o seguinte:
“type | url;“
“url | www.website.pt;“
“title | title;“
“description | description;“
“referenced_urls | www.website1.pt www.website2.pt;“
“words | word1 word2 word3;“
A “description“, “referenced_urls“, “title“, “words“ são opcionais

Exemplo de informações de um url:

type | url; url | www.uc.pt; title | DEI; description | DEI é fixe; referenced_urls | www.google.com www.facebook.com; words | DEI UC;



Para informar que as informações da página de admin foram atualizadas é enviado:

type | adminupdated


Distribuição de tarefas pelos elementos do grupo
O projeto foi realizado simultaneamente.
